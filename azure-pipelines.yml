# Azure DevOps Pipeline for Node.js Application
# Version: 1.0.0
# Supports Node.js application deployment to Azure App Service

trigger:
  - master

# Global variables that can be used across the pipeline
variables:
  # Azure-specific variables
  - name: subscriptionId
    value: '1a68a531-d4b8-4c34-9b80-823f6d61e2ba'
  - name: resourceGroupName
    value: 'CICD'
  - name: appServiceName
    value: 'Vuejs Demo'

  # Node.js and build configuration
  - name: nodeVersion
    value: '20.x'
  - name: npmCommand
    value: 'ci'

stages:
- stage: Build
  displayName: 'Build Stage'
  jobs:
  - job: Build
    displayName: 'Build, and Validate'
    pool:
      vmImage: 'ubuntu-latest'
    
    steps:
    # Setup Node.js environment
    - task: NodeTool@0
      inputs:
        versionSpec: '$(nodeVersion)'
      displayName: 'Install Node.js'

    # Install dependencies
    - script: |
        npm $(npmCommand)
      displayName: 'Install Project Dependencies'
      continueOnError: false

    # Run linting
    - script: |
        npm run lint
      displayName: 'Run Code Linting'
      continueOnError: true


    # Build production assets
    - script: |
        npm run build
      displayName: 'Build Production Assets'

    # Archive build artifacts
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: '$(System.DefaultWorkingDirectory)/dist'
        includeRootFolder: false
        archiveType: 'zip'
        archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
      displayName: 'Archive Build Artifacts'

    # Publish build artifacts
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'drop'
        publishLocation: 'Container'
      displayName: 'Publish Build Artifacts'

- stage: Deploy
  displayName: 'Deployment Stage'
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployToProduction
    displayName: 'Deploy to Azure App Service'
    environment: 'production'
    pool:
      vmImage: 'ubuntu-latest'
    strategy:
      runOnce:
        deploy:
          steps:
          # Download artifacts from previous stage
          - download: current
            artifact: drop
            displayName: 'Download Build Artifacts'

          # Optional: Install additional tools
          - script: |
              npm install -g serve
            displayName: 'Install Global Tools'

          # Deploy to Azure App Service
          - task: AzureWebApp@1
            inputs:
              azureSubscription: 'MAS Deployment'
              appName: '$(appServiceName)'
              appType: 'webAppLinux'
              package: '$(Pipeline.Workspace)/drop/$(Build.BuildId).zip'
              startupCommand: 'npx serve -s dist'
            displayName: 'Deploy to Azure App Service'

          # Optional: Run smoke tests or health checks
          - script: |
              curl https://$(appServiceName).azurewebsites.net/health
            displayName: 'Smoke Test Deployment'
            continueOnError: true
